#pragma once

#define ABC_NUMBER 26
#define SEQ1_MAX_LENGTH 3000
#define SEQ2_MAX_LENGTH 2000
#define BUFF_SIZE 1 << 20
#define NUM_VAR 3

struct score {
	int n; // offset
	int k; // hyphen index mutant
	float scoreWeight; // weight
}typedef Score;

enum symbols{DOLLAR, PERCENTAGE, HASH, SPACE, SYMBOLS_NUM};

const int SYMBOLS_FIT_MAT[ABC_NUMBER][ABC_NUMBER] {
{DOLLAR, SPACE, HASH, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, HASH, SPACE, SPACE, SPACE, SPACE},
{SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{HASH, SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, DOLLAR, PERCENTAGE, SPACE, HASH, HASH, SPACE, SPACE, HASH, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, PERCENTAGE, DOLLAR, SPACE, SPACE, HASH, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, HASH, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, HASH, PERCENTAGE, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, HASH, PERCENTAGE, SPACE, PERCENTAGE, SPACE},
{HASH, SPACE, SPACE, HASH, SPACE, SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, HASH, HASH, HASH, SPACE, DOLLAR, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, DOLLAR, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, HASH, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, DOLLAR, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, PERCENTAGE, HASH, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, DOLLAR, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, HASH, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, DOLLAR, SPACE, SPACE, PERCENTAGE, HASH, HASH, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, SPACE, HASH, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, DOLLAR, PERCENTAGE, HASH, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, HASH, SPACE, SPACE, PERCENTAGE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{PERCENTAGE, SPACE, HASH, HASH, HASH, SPACE, HASH, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, HASH, SPACE, HASH, HASH, SPACE, DOLLAR, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE},
{PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, HASH, SPACE, HASH, SPACE, SPACE, PERCENTAGE, DOLLAR, SPACE, HASH, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE, SPACE},
{HASH, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, PERCENTAGE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, HASH, SPACE, DOLLAR, SPACE, SPACE, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, PERCENTAGE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR, SPACE, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, PERCENTAGE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, PERCENTAGE, SPACE, DOLLAR, SPACE},
{SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, SPACE, DOLLAR}
};

int readFromFile(char*** seq2arr,char** seq1,int* numOfSequences,int* weights,Score** topScore);
void makeUpperStr(char* str);
int initScore(Score** topScore, int size);
void calcSeq2Size(int* seq2ArrSize, int numProc,int myRank,int numOfSequences);